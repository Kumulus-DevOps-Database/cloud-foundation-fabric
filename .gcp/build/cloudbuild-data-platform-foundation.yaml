steps:

- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"
      ls -la

- id: 'tf init'
  name: 'hashicorp/terraform:1.3.6'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      cd blueprints
      cd data-solutions
      cd data-platform-foundations
      cat << EOF > backend.tf
      terraform {
        backend "gcs" {
        }
      }
      provider "google" {

      }
      provider "google-beta" {

      }
      EOF

      echo ""
      echo "*************** TERRAFORM INIT ******************"
      echo "*************************************************"
      terraform init \
        -backend-config="bucket=${_BUCKET}" \
        -backend-config="prefix=${_PREFIX}"

- id: 'tf plan'
  name: 'hashicorp/terraform:1.3.6'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      cd blueprints
      cd data-solutions
      cd data-platform-foundations
      echo ""
      echo "*************** TERRAFOM PLAN ******************"
      echo "*************************************************"
      terraform plan \
        -var="prefix=$_PREFIX" \
        -var="folder_id=$_FOLDER_ID" \
        -var="billing_account_id=$_BILLING_ACCOUNT_ID" \
        -var="organization_domain=$_ORGANIZATION_DOMAIN" \
        -out edu-dev.tfplan || exit 1

- id: 'tf apply'
  name: 'hashicorp/terraform:1.3.6'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
       cd blueprints\\data-solutions\\data-platform-foundations
      echo ""
      echo "*************** TERRAFOM APPLY ******************"
      echo "*************************************************"
      terraform apply edu.dev.tfplan